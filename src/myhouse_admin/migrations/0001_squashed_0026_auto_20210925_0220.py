# Generated by Django 3.2.5 on 2021-09-25 12:41

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    replaces = [('myhouse_admin', '0001_initial'), ('myhouse_admin', '0002_initial'), ('myhouse_admin', '0003_auto_20210804_0540'), ('myhouse_admin', '0004_auto_20210804_1302'), ('myhouse_admin', '0005_aboutuspageadditionalimage'), ('myhouse_admin', '0006_auto_20210804_1552'), ('myhouse_admin', '0007_auto_20210829_1745'), ('myhouse_admin', '0008_auto_20210906_1430'), ('myhouse_admin', '0009_alter_personalaccount_flat'), ('myhouse_admin', '0010_alter_service_unit'), ('myhouse_admin', '0011_auto_20210910_1116'), ('myhouse_admin', '0012_personalaccount_summary'), ('myhouse_admin', '0013_alter_cashboxrecord_summary'), ('myhouse_admin', '0014_auto_20210913_1855'), ('myhouse_admin', '0015_alter_cashboxrecord_personal_account'), ('myhouse_admin', '0016_meterreading_number'), ('myhouse_admin', '0017_alter_meterreading_reading_date'), ('myhouse_admin', '0018_alter_meterreading_reading_date'), ('myhouse_admin', '0019_auto_20210918_2112'), ('myhouse_admin', '0020_alter_receiptservice_receipt'), ('myhouse_admin', '0021_remove_personalaccount_summary'), ('myhouse_admin', '0022_cashboxrecord_receipt'), ('myhouse_admin', '0023_auto_20210925_0039'), ('myhouse_admin', '0024_rename_text_message_body'), ('myhouse_admin', '0025_message_for_debtors'), ('myhouse_admin', '0026_auto_20210925_0220')]

    initial = True

    dependencies = [
        ('users', '0003_alter_owner_id'),
        ('users', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('image1', models.ImageField(upload_to=users.models.get_upload_path)),
                ('image2', models.ImageField(upload_to=users.models.get_upload_path)),
                ('image3', models.ImageField(upload_to=users.models.get_upload_path)),
                ('image4', models.ImageField(upload_to=users.models.get_upload_path)),
                ('image5', models.ImageField(upload_to=users.models.get_upload_path)),
                ('workers', models.ManyToManyField(to='users.Employee')),
            ],
            options={
                'ordering': ('name',),
                'unique_together': {('name', 'address')},
            },
        ),
        migrations.CreateModel(
            name='PaymentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('details', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('in_meter', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('edit_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TariffService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.service')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.tariff')),
            ],
        ),
        migrations.AddField(
            model_name='tariff',
            name='services',
            field=models.ManyToManyField(through='myhouse_admin.TariffService', to='myhouse_admin.Service'),
        ),
        migrations.AddField(
            model_name='service',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='myhouse_admin.unit'),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('house', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhouse_admin.house')),
            ],
            options={
                'unique_together': {('name', 'house')},
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('0', 'Приход'), ('1', 'Расход')], max_length=1)),
            ],
            options={
                'unique_together': {('name', 'type')},
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhouse_admin.section')),
            ],
            options={
                'unique_together': {('name', 'section')},
            },
        ),
        migrations.CreateModel(
            name='AboutUsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=100)),
                ('short_text', models.TextField()),
                ('director_photo', models.ImageField(upload_to=users.models.get_upload_path)),
                ('ai_heading', models.CharField(max_length=100)),
                ('ai_short_text', models.TextField()),
                ('seo_title', models.CharField(blank=True, max_length=255, null=True)),
                ('seo_description', models.TextField(blank=True, null=True)),
                ('seo_keywords', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poster', models.ImageField(blank=True, null=True, upload_to=users.models.get_upload_path)),
                ('heading', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='ContactsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=100)),
                ('short_text', models.TextField()),
                ('commercial_site_link', models.URLField()),
                ('fio', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(regex='^(?:\\+38)?(?:\\(0[0-9][0-9]\\)[ .-]?[0-9]{3}[ .-]?[0-9]{2}[ .-]?[0-9]{2}|044[ .-]?[0-9]{3}[ .-]?[0-9]{2}[ .-]?[0-9]{2}|0[0-9][0-9][0-9]{7})$')], verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('map', models.TextField()),
                ('seo_title', models.CharField(blank=True, max_length=255, null=True)),
                ('seo_description', models.TextField(blank=True, null=True)),
                ('seo_keywords', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MainPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slide1', models.ImageField(upload_to=users.models.get_upload_path)),
                ('slide2', models.ImageField(upload_to=users.models.get_upload_path)),
                ('slide3', models.ImageField(upload_to=users.models.get_upload_path)),
                ('heading', models.CharField(max_length=100)),
                ('short_text', models.TextField()),
                ('show_links_on_apps', models.BooleanField(default=False)),
                ('seo_title', models.CharField(blank=True, max_length=255, null=True)),
                ('seo_description', models.TextField(blank=True, null=True)),
                ('seo_keywords', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServicesPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_title', models.CharField(blank=True, max_length=255, null=True)),
                ('seo_description', models.TextField(blank=True, null=True)),
                ('seo_keywords', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TariffImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=users.models.get_upload_path)),
                ('signature', models.CharField(max_length=100)),
                ('content_type', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('object_id', models.PositiveIntegerField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='TariffPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=100)),
                ('short_text', models.TextField()),
                ('seo_title', models.CharField(blank=True, max_length=255, null=True)),
                ('seo_description', models.TextField(blank=True, null=True)),
                ('seo_keywords', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(error_messages={'invalid_extension': 'Этот формат не поддерживается'}, upload_to=users.models.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('pdf', 'jpg'))])),
                ('about_us_page', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.aboutuspage')),
            ],
        ),
        migrations.CreateModel(
            name='AboutUsPageAdditionalImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=users.models.get_upload_path)),
                ('about_us_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_images', to='myhouse_admin.aboutuspage')),
            ],
        ),
        migrations.CreateModel(
            name='AboutUsPageImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=users.models.get_upload_path)),
                ('about_us_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='myhouse_admin.aboutuspage')),
            ],
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('square', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('floor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhouse_admin.floor')),
                ('tariff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhouse_admin.tariff')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flats', to='users.owner')),
            ],
            options={
                'unique_together': {('number', 'floor')},
            },
        ),
        migrations.AlterField(
            model_name='tariffservice',
            name='tariff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tariff_services', to='myhouse_admin.tariff'),
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together={('name',)},
        ),
        migrations.CreateModel(
            name='PersonalAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('0', 'Не активен'), ('1', 'Активен')], max_length=1)),
                ('flat', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personal_account', to='myhouse_admin.flat')),
            ],
        ),
        migrations.CreateModel(
            name='MeterReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading_date', models.DateField()),
                ('status', models.CharField(choices=[('1', 'Новое'), ('2', 'Учтено'), ('3', 'Учтено и оплачено'), ('4', 'Нулевое')], max_length=1)),
                ('testimony', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.flat')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.service')),
                ('number', models.CharField(default='123123123', max_length=50, unique=True, verbose_name='Номер')),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True, verbose_name='Номер')),
                ('is_made', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('1', 'Не оплачена'), ('2', 'Частично оплачена'), ('3', 'Оплачена')], default='1', max_length=1)),
                ('creation_date', models.DateField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('summary', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipts', to='myhouse_admin.flat')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('convenient_time', models.DateTimeField(verbose_name='Удобное время')),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('1', 'Новое'), ('2', 'В работе'), ('3', 'Выполнено')], default='1', max_length=1)),
                ('comment', models.TextField(blank=True, null=True)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.flat')),
                ('master', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.employee')),
                ('master_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.role')),
                ('added_time', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='ReceiptService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumption', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('unit_price', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('total_price', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='r_services', to='myhouse_admin.receipt')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myhouse_admin.service')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myhouse_admin.unit')),
            ],
        ),
        migrations.CreateModel(
            name='CashboxRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True)),
                ('date', models.DateField(verbose_name='Дата')),
                ('is_made', models.BooleanField(default=False)),
                ('summary', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.employee')),
                ('payment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.paymenttype')),
                ('personal_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.personalaccount')),
                ('receipt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.receipt')),
            ],
            options={
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('send_date', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.employee')),
                ('subject', models.CharField(default='Default subject', max_length=255)),
                ('recipients', models.ManyToManyField(related_name='messages', to='users.Owner')),
                ('for_debtors', models.BooleanField(default=False)),
                ('flat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.flat')),
                ('floor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.floor')),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.house')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.section')),
            ],
        ),
    ]
