# Generated by Django 3.2.5 on 2021-08-01 12:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('myhouse_admin', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='ticket',
            name='master',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.employee'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='master_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.role'),
        ),
        migrations.AddField(
            model_name='tariffservice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.service'),
        ),
        migrations.AddField(
            model_name='tariffservice',
            name='tariff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.tariff'),
        ),
        migrations.AddField(
            model_name='tariff',
            name='services',
            field=models.ManyToManyField(through='myhouse_admin.TariffService', to='myhouse_admin.Service'),
        ),
        migrations.AddField(
            model_name='service',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.unit'),
        ),
        migrations.AddField(
            model_name='section',
            name='house',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhouse_admin.house'),
        ),
        migrations.AddField(
            model_name='receiptservice',
            name='receipt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.receipt'),
        ),
        migrations.AddField(
            model_name='receiptservice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myhouse_admin.service'),
        ),
        migrations.AddField(
            model_name='receiptservice',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='myhouse_admin.unit'),
        ),
        migrations.AddField(
            model_name='receipt',
            name='flat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.flat'),
        ),
        migrations.AddField(
            model_name='receipt',
            name='tariff',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhouse_admin.tariff'),
        ),
        migrations.AddField(
            model_name='personalaccount',
            name='flat',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhouse_admin.flat'),
        ),
        migrations.AlterUniqueTogether(
            name='paymenttype',
            unique_together={('name', 'type')},
        ),
        migrations.AddField(
            model_name='meterreading',
            name='flat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.flat'),
        ),
        migrations.AddField(
            model_name='meterreading',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.service'),
        ),
        migrations.AddField(
            model_name='message',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.employee'),
        ),
        migrations.AddField(
            model_name='house',
            name='workers',
            field=models.ManyToManyField(to='users.Employee'),
        ),
        migrations.AddField(
            model_name='floor',
            name='section',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhouse_admin.section'),
        ),
        migrations.AddField(
            model_name='flat',
            name='floor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhouse_admin.floor'),
        ),
        migrations.AddField(
            model_name='flat',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.owner'),
        ),
        migrations.AddField(
            model_name='flat',
            name='tariff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myhouse_admin.tariff'),
        ),
        migrations.AddField(
            model_name='cashboxrecord',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.employee'),
        ),
        migrations.AddField(
            model_name='cashboxrecord',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.owner'),
        ),
        migrations.AddField(
            model_name='cashboxrecord',
            name='payment_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.paymenttype'),
        ),
        migrations.AddField(
            model_name='cashboxrecord',
            name='personal_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.personalaccount'),
        ),
        migrations.AddField(
            model_name='block',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AlterUniqueTogether(
            name='flat',
            unique_together={('number', 'floor')},
        ),
    ]
