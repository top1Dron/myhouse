# Generated by Django 3.2.5 on 2021-08-01 12:09

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=100)),
                ('short_text', models.TextField()),
                ('director_photo', models.ImageField(upload_to=users.models.get_upload_path)),
                ('ai_heading', models.CharField(max_length=100)),
                ('ai_short_text', models.TextField()),
                ('seo_title', models.CharField(max_length=255)),
                ('seo_description', models.TextField()),
                ('seo_keywords', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('poster', models.ImageField(upload_to=users.models.get_upload_path)),
                ('heading', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('object_id', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CashboxRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True)),
                ('date', models.DateField(verbose_name='Дата')),
                ('is_made', models.BooleanField(default=False)),
                ('summary', models.FloatField()),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactsPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=100)),
                ('short_text', models.TextField()),
                ('commercial_site_link', models.URLField()),
                ('fio', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(regex='^(?:\\+38)?(?:\\(0[0-9][0-9]\\)[ .-]?[0-9]{3}[ .-]?[0-9]{2}[ .-]?[0-9]{2}|044[ .-]?[0-9]{3}[ .-]?[0-9]{2}[ .-]?[0-9]{2}|0[0-9][0-9][0-9]{7})$')], verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('map', models.TextField()),
                ('seo_title', models.CharField(max_length=255)),
                ('seo_description', models.TextField()),
                ('seo_keywords', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(error_messages={'invalid_extension': 'Этот формат не поддерживается'}, upload_to=users.models.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('pdf', 'jpg'))])),
            ],
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('square', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('image1', models.ImageField(upload_to=users.models.get_upload_path)),
                ('image2', models.ImageField(upload_to=users.models.get_upload_path)),
                ('image3', models.ImageField(upload_to=users.models.get_upload_path)),
                ('image4', models.ImageField(upload_to=users.models.get_upload_path)),
                ('image5', models.ImageField(upload_to=users.models.get_upload_path)),
            ],
        ),
        migrations.CreateModel(
            name='MainPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slide1', models.ImageField(upload_to=users.models.get_upload_path)),
                ('slide2', models.ImageField(upload_to=users.models.get_upload_path)),
                ('slide3', models.ImageField(upload_to=users.models.get_upload_path)),
                ('heading', models.CharField(max_length=100)),
                ('short_text', models.TextField()),
                ('show_links_on_apps', models.BooleanField(default=False)),
                ('seo_title', models.CharField(max_length=255)),
                ('seo_description', models.TextField()),
                ('seo_keywords', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('send_date', models.DateTimeField(auto_now_add=True)),
                ('recipients', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MeterReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reading_date', models.DateField()),
                ('status', models.CharField(choices=[('1', 'Новое'), ('2', 'Учтено'), ('3', 'Учтено и оплачено'), ('4', 'Нулевое')], max_length=1)),
                ('testimony', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
        ),
        migrations.CreateModel(
            name='PaymentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('details', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('0', 'Приход'), ('1', 'Расход')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('0', 'Не активен'), ('1', 'Активен')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True, verbose_name='Номер')),
                ('is_made', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('1', 'Не оплачена'), ('2', 'Частично оплачена'), ('3', 'Оплачена')], default='1', max_length=1)),
                ('creation_date', models.DateField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('summary', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
        ),
        migrations.CreateModel(
            name='ReceiptService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumption', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('unit_price', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('total_price', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('in_meter', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ServicesPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_title', models.CharField(max_length=255)),
                ('seo_description', models.TextField()),
                ('seo_keywords', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('edit_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TariffImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=users.models.get_upload_path)),
                ('signature', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TariffPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(max_length=100)),
                ('short_text', models.TextField()),
                ('seo_title', models.CharField(max_length=255)),
                ('seo_description', models.TextField()),
                ('seo_keywords', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TariffService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('convenient_time', models.DateTimeField(verbose_name='Удобное время')),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('1', 'Новое'), ('2', 'В работе'), ('3', 'Выполнено')], default='1', max_length=1)),
                ('comment', models.TextField(blank=True, null=True)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myhouse_admin.flat')),
            ],
        ),
    ]
